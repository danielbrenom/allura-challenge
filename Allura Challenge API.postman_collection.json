{
	"info": {
		"_postman_id": "0be8e9e7-a93d-4e7f-a3f4-623277db1384",
		"name": "Allura Challenge API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "videos",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get movie",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 and body is valid\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.json;\r",
											"    postman.setNextRequest(\"Get movies\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{movieId}}"
										}
									]
								},
								"description": "Gets a movie from the database"
							},
							"response": [
								{
									"name": "Payload of MovieResponse",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/videos/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"videos",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"anim eu \",\n \"titulo\": \"Duis est dolor \",\n \"descricao\": \"reprehenderit\",\n \"url\": \"laborum eiusmod u\"\n}"
								}
							]
						},
						{
							"name": "Update movie",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    postman.setNextRequest(\"Deletes movie\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"titulo\": \"sn\",\r\n    \"descricao\": \"ajdbnsfk\",\r\n    \"url\": \"sknkl\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/videos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{movieId}}",
											"type": "any",
											"description": "(Required) "
										}
									]
								},
								"description": "Updates a movie from the database"
							},
							"response": [
								{
									"name": "Payload of MovieResponse",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/videos/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"videos",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"anim eu \",\n \"titulo\": \"Duis est dolor \",\n \"descricao\": \"reprehenderit\",\n \"url\": \"laborum eiusmod u\"\n}"
								}
							]
						},
						{
							"name": "Deletes movie",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    postman.setNextRequest(null);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{movieId}}",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletes a movie from the database"
							},
							"response": [
								{
									"name": "Payload of OkResult",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/videos/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"videos",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": 98135461\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    postman.setNextRequest(\"Update movie\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/videos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos"
							]
						},
						"description": "Gets all movies from the database"
					},
					"response": [
						{
							"name": "Payload of Array of MovieResponse",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laborum do esse ea\",\n  \"titulo\": \"esse irure aliquip sed culpa\",\n  \"descricao\": \"nostrud esse aliqua do\",\n  \"url\": \"mollit incididunt elit\"\n },\n {\n  \"id\": \"et nisi quis \",\n  \"titulo\": \"exercitation quis esse ut\",\n  \"descricao\": \"magna ullamco nulla\",\n  \"url\": \"nulla\"\n }\n]"
						}
					]
				},
				{
					"name": "Add movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var response = JSON.parse(responseBody);\r",
									"    pm.collectionVariables.set(\"movieId\", response.id);\r",
									"    postman.setNextRequest(\"Get movie\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"sn\",\r\n    \"descricao\": \"ajdbnsfk\",\r\n    \"url\": \"sknkl\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/videos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos"
							]
						},
						"description": "Adds a new movie to the database"
					},
					"response": [
						{
							"name": "Payload of MovieResponse",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"anim eu \",\n \"titulo\": \"Duis est dolor \",\n \"descricao\": \"reprehenderit\",\n \"url\": \"laborum eiusmod u\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"postman.setNextRequest(\"Add movie\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:7071/api"
		},
		{
			"key": "movieId",
			"value": ""
		}
	]
}