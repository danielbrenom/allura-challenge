{
	"info": {
		"_postman_id": "bd64a998-678b-4316-b822-e6ee6a10b79a",
		"name": "Alura Challenge API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "categorias",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets a category from the database",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "sit",
											"type": "any",
											"description": "(Required) "
										}
									]
								},
								"description": "Gets a Category from the database"
							},
							"response": [
								{
									"name": "Payload of CategoryResponse",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categorias/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categorias",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"Lorem nulla ut id\",\n \"titulo\": \"id ut ad deserunt\",\n \"cor\": \"incididunt cupidatat minim nisi\"\n}"
								}
							]
						},
						{
							"name": "Deletes a category from the database",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "sit",
											"type": "any",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletes a Category from the database"
							},
							"response": [
								{
									"name": "Payload of OkResult",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categorias/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categorias",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": 24411134\n}"
								}
							]
						},
						{
							"name": "Gets all movies by category from the database",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias/:id/videos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias",
										":id",
										"videos"
									],
									"variable": [
										{
											"key": "id",
											"value": "sit",
											"type": "any",
											"description": "(Required) "
										}
									]
								},
								"description": "Gets Movies by Category from the database"
							},
							"response": [
								{
									"name": "Payload of MovieByCategoryResponse",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categorias/:id/videos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categorias",
												":id",
												"videos"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"videos\": [\n  {\n   \"id\": \"Duis do\",\n   \"titulo\": \"sint dolor\",\n   \"descricao\": \"laboris deserunt magna\",\n   \"url\": \"irure\",\n   \"categoriaId\": \"inci\"\n  },\n  {\n   \"id\": \"veniam quis\",\n   \"titulo\": \"adipisicing aliquip ullamco laborum ut\",\n   \"descricao\": \"in ad commodo\",\n   \"url\": \"nostrud ea voluptate velit\",\n   \"categoriaId\": \"dolor veniam\"\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Gets all categories from the database",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						},
						"description": "Gets all Categories from the database"
					},
					"response": [
						{
							"name": "Payload of Array of CategoryResponse",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"labore ullamco\",\n  \"titulo\": \"do ex ex\",\n  \"cor\": \"sed ad sint ipsum\"\n },\n {\n  \"id\": \"sunt incididunt\",\n  \"titulo\": \"in Duis i\",\n  \"cor\": \"aliqua Excepteur proident enim\"\n }\n]"
						}
					]
				},
				{
					"name": "Creates a category in the database",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						},
						"description": "Adds a new Category to the database"
					},
					"response": [
						{
							"name": "Payload of CategoryResponse",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categorias",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"Lorem nulla ut id\",\n \"titulo\": \"id ut ad deserunt\",\n \"cor\": \"incididunt cupidatat minim nisi\"\n}"
						}
					]
				},
				{
					"name": "Updates a category in the database",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titulo\": \"magna pariatur laborum veniam\",\n    \"cor\": \"dolore fugiat sint ipsum\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categorias/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "ut proident do",
									"description": "(Required) Category Id"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "videos",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Gets a movie from the database",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200 and body is valid\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.json;\r",
											"    postman.setNextRequest(\"Get movies\");\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "sit",
											"type": "any",
											"description": "(Required) "
										}
									]
								},
								"description": "Gets a movie from the database"
							},
							"response": [
								{
									"name": "Payload of MovieResponse",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/videos/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"videos",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"ut dolor\",\n \"titulo\": \"Lorem minim ut\",\n \"descricao\": \"est Lorem\",\n \"url\": \"culpa ad in non\",\n \"categoriaId\": \"dolore ut\"\n}"
								}
							]
						},
						{
							"name": "Deletes a movie from the database",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    postman.setNextRequest(null);\r",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "sit",
											"type": "any",
											"description": "(Required) "
										}
									]
								},
								"description": "Deletes a movie from the database"
							},
							"response": [
								{
									"name": "Payload of OkResult",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/videos/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"videos",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n \"statusCode\": 24411134\n}"
								}
							]
						}
					]
				},
				{
					"name": "Gets all movies from the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    postman.setNextRequest(\"Update movie\");\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/videos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos"
							]
						},
						"description": "Gets all movies from the database"
					},
					"response": [
						{
							"name": "Payload of Array of MovieResponse",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos?search=sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									],
									"query": [
										{
											"key": "search",
											"value": "sit"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"\",\n  \"titulo\": \"ea\",\n  \"descricao\": \"sit\",\n  \"url\": \"ad labore eu\",\n  \"categoriaId\": \"exercitation laborum sed dolore\"\n },\n {\n  \"id\": \"exercitation esse ullamco\",\n  \"titulo\": \"est incididunt elit\",\n  \"descricao\": \"ex aliquip esse Ut\",\n  \"url\": \"in\",\n  \"categoriaId\": \"Duis ad ut\"\n }\n]"
						}
					]
				},
				{
					"name": "Adds a movie to the database",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    var response = JSON.parse(responseBody);\r",
									"    pm.collectionVariables.set(\"movieId\", response.id);\r",
									"    postman.setNextRequest(\"Get movie\");\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/videos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos"
							]
						},
						"description": "Adds a new movie to the database"
					},
					"response": [
						{
							"name": "Payload of MovieResponse",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/videos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"videos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"ut dolor\",\n \"titulo\": \"Lorem minim ut\",\n \"descricao\": \"est Lorem\",\n \"url\": \"culpa ad in non\",\n \"categoriaId\": \"dolore ut\"\n}"
						}
					]
				},
				{
					"name": "Updates a movie in the database",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titulo\": \"minim est\",\n    \"descricao\": \"dolor nostrud\",\n    \"url\": \"in sunt minim\",\n    \"categoriaId\": \"ea Duis\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/videos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "ut proident do",
									"description": "(Required) Id of the movie"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/videos/free",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/videos/free",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"videos",
								"free"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logs a user in the API",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"magna pariatur\",\n    \"password\": \"officia Lorem\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creates a new user",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"tempor mollit Lorem culpa\",\n    \"email\": \"minim est nisi\",\n    \"password\": \"aliqua id sed est\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Gets logged user information",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "<Bearer Token>",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"me"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"id\": \"com\",\n \"name\": \"\",\n \"email\": \"aliquip velit ad in\"\n}"
				},
				{
					"name": "Unauthorized - Não autorizado",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"postman.setNextRequest(\"Add movie\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		},
		{
			"key": "movieId",
			"value": "",
			"type": "any"
		}
	]
}