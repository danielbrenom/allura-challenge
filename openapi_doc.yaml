openapi: 3.0.1
info:
  title: Alura Challenge BackEnd Api
  description: API for AluraFlix
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: v1
paths:
  "/categorias/{id}":
    get:
      tags:
        - Category
      summary: Gets a category from the database
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
    patch:
      tags:
        - Category
      summary: Updates a category in the database
      parameters:
        - name: id
          in: path
          description: Category Id
          required: true
          schema:
            type: string
      requestBody:
        description: Category data to update
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/CategoryRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CategoryRequest"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
    delete:
      tags:
        - Category
      summary: Deletes a category from the database
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/OkResult"
            application/json:
              schema:
                "$ref": "#/components/schemas/OkResult"
            text/json:
              schema:
                "$ref": "#/components/schemas/OkResult"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
  "/categorias":
    get:
      tags:
        - Category
      summary: Gets all categories from the database
      parameters:
        - name: page
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryResponse"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryResponse"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
    post:
      tags:
        - Category
      summary: Creates a category in the database
      requestBody:
        description: CAtegory data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/CategoryRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CategoryRequest"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/CategoryResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
  "/categorias/{id}/videos":
    get:
      tags:
        - Category
      summary: Gets all movies by category from the database
      parameters:
        - name: id
          in: path
          description: Category Id
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MovieByCategoryResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/MovieByCategoryResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/MovieByCategoryResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
  "/login":
    post:
      tags:
        - Login
      summary: Logs a user in the API
      requestBody:
        description: User login data
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
  "/videos/{id}":
    get:
      tags:
        - Movie
      summary: Gets a movie from the database
      parameters:
        - name: id
          in: path
          description: Id of the movie
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Movie found
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
    patch:
      tags:
        - Movie
      summary: Updates a movie in the database
      parameters:
        - name: id
          in: path
          description: Id of the movie
          required: true
          schema:
            type: string
      requestBody:
        description: Movie data to update
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MovieRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/MovieRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/MovieRequest"
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
    delete:
      tags:
        - Movie
      summary: Deletes a movie from the database
      parameters:
        - name: id
          in: path
          description: Id of the movie
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
  "/videos":
    get:
      tags:
        - Movie
      summary: Gets all movies from the database
      parameters:
        - name: query
          in: query
          description: Name of the movie
          schema:
            type: string
        - name: page
          in: query
          description: Page of the search
          schema:
            type: string
      responses:
        '200':
          description: List of movies
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MovieResponse"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MovieResponse"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MovieResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
    post:
      tags:
        - Movie
      summary: Adds a movie to the database
      requestBody:
        description: Movie data to add
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MovieRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/MovieRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/MovieRequest"
        required: true
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/MovieResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
  "/videos/free":
    get:
      tags:
        - Movie
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MovieResponse"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MovieResponse"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MovieResponse"
  "/user":
    post:
      tags:
        - User
      summary: Creates a new user
      requestBody:
        description: The user data for creation
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserRequest"
      responses:
        '201':
          description: User created
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/UserCreatedResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/UserCreatedResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/UserCreatedResponse"
  "/user/me":
    get:
      tags:
        - User
      summary: Gets logged user information
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/UserCreatedResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/UserCreatedResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/UserCreatedResponse"
        '401':
          description: Unauthorized - Não autorizado
      security:
        - JWT:
            -
components:
  schemas:
    CategoryRequest:
      type: object
      properties:
        titulo:
          type: string
          description: Titulo da categoria
          nullable: true
        cor:
          type: string
          description: Cor da categoria
          nullable: true
      additionalProperties: false
    CategoryResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador da categoria
          nullable: true
        titulo:
          type: string
          description: Nome da categoria
          nullable: true
        cor:
          type: string
          description: Cor da categoria
          nullable: true
      additionalProperties: false
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: Email do usuario
          nullable: true
        password:
          type: string
          description: Senha do usuario
          nullable: true
      additionalProperties: false
    LoginResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador do usuario
          nullable: true
        name:
          type: string
          description: Nome do usuario
          nullable: true
        email:
          type: string
          description: Email do usuario
          nullable: true
        token:
          type: string
          description: Token JWT do usuario
          nullable: true
      additionalProperties: false
    MovieByCategoryResponse:
      type: object
      properties:
        videos:
          type: array
          items:
            "$ref": "#/components/schemas/MovieResponse"
          description: Videos pertencentes a categoria
          nullable: true
      additionalProperties: false
    MovieRequest:
      type: object
      properties:
        titulo:
          type: string
          description: Titulo do video
          nullable: true
        descricao:
          type: string
          description: Descrição do video
          nullable: true
        url:
          type: string
          description: URL do video
          nullable: true
        categoriaId:
          type: string
          description: Categoria do video
          nullable: true
      additionalProperties: false
    MovieResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador do video
          nullable: true
        titulo:
          type: string
          description: Titulo do video
          nullable: true
        descricao:
          type: string
          description: Descrição do video
          nullable: true
        url:
          type: string
          description: URL do video
          nullable: true
        categoriaId:
          type: string
          description: Categoria do video
          nullable: true
      additionalProperties: false
    OkResult:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
      additionalProperties: false
    UserCreatedResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador do usuario
          nullable: true
        name:
          type: string
          description: Nome do usuario
          nullable: true
        email:
          type: string
          description: Email do usuario
          nullable: true
      additionalProperties: false
    UserRequest:
      type: object
      properties:
        name:
          type: string
          description: Nome do usuário
          nullable: true
        email:
          type: string
          description: Email do usuário
          nullable: true
        password:
          type: string
          description: Senha do usuário
          nullable: true
      additionalProperties: false
  securitySchemes:
    JWT:
      type: http
      description: JWT Bearer Token Authorization
      scheme: Bearer
      bearerFormat: jwt
